###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.40.1.50106 for STM8             09/Jun/2017  10:03:38 #
# Copyright 2010-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\MyProject\stm8\my programme\STM8_MS5611\stm8s_it.c    #
#    Command line =  "D:\MyProject\stm8\my programme\STM8_MS5611\stm8s_it.c"  #
#                    -e -On --no_cse --no_unroll --no_inline                  #
#                    --no_code_motion --no_tbaa --no_cross_call --debug       #
#                    --code_model small --data_model medium -o                #
#                    "D:\MyProject\stm8\my programme\STM8_MS5611\Debug\Obj\"  #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\stm8\LIB\dlstm8smn.h"     #
#                    -lcN "D:\MyProject\stm8\my programme\STM8_MS5611\Debug\L #
#                    ist\" -I "D:\MyProject\stm8\my programme\STM8_MS5611\"   #
#                    -I "D:\MyProject\stm8\my programme\STM8_MS5611\STM8S_Std #
#                    Periph_Driver\src\" -I "D:\MyProject\stm8\my             #
#                    programme\STM8_MS5611\STM8S_StdPeriph_Driver\inc\"       #
#                    --vregs 16                                               #
#    List file    =  D:\MyProject\stm8\my programme\STM8_MS5611\Debug\List\st #
#                    m8s_it.lst                                               #
#    Object file  =  D:\MyProject\stm8\my programme\STM8_MS5611\Debug\Obj\stm #
#                    8s_it.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

D:\MyProject\stm8\my programme\STM8_MS5611\stm8s_it.c
      1          /**
      2            ******************************************************************************
      3            * @file     stm8s_it.c
      4            * @author   MCD Application Team
      5            * @version  V2.1.0
      6            * @date     18-November-2011
      7            * @brief    Main Interrupt Service Routines.
      8            *           This file provides template for all peripherals interrupt service 
      9            *           routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */ 
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm8s_it.h"
     26          
     27          /** @addtogroup Template_Project
     28            * @{
     29            */
     30          
     31          /* Private typedef -----------------------------------------------------------*/
     32          /* Private define ------------------------------------------------------------*/
     33          /* Private macro -------------------------------------------------------------*/
     34          /* Private variables ---------------------------------------------------------*/
     35          /* Private function prototypes -----------------------------------------------*/
     36          /* Private functions ---------------------------------------------------------*/
     37          /* Public functions ----------------------------------------------------------*/
     38          
     39          #ifdef _COSMIC_
     40          /**
     41            * @brief Dummy Interrupt routine
     42            * @par Parameters:
     43            * None
     44            * @retval
     45            * None
     46          */
     47          INTERRUPT_HANDLER(NonHandledInterrupt, 25)
     48          {
     49            /* In order to detect unexpected events during development,
     50               it is recommended to set a breakpoint on the following instruction.
     51            */
     52          }
     53          #endif /*_COSMIC_*/
     54          
     55          /**
     56            * @brief TRAP Interrupt routine
     57            * @param  None
     58            * @retval None
     59            */
     60          INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
     61          {
     62            /* In order to detect unexpected events during development,
     63               it is recommended to set a breakpoint on the following instruction.
     64            */
     65          }
     66          
     67          /**
     68            * @brief Top Level Interrupt routine.
     69            * @param  None
     70            * @retval None
     71            */
     72          INTERRUPT_HANDLER(TLI_IRQHandler, 0)
     73          
     74          {
     75            /* In order to detect unexpected events during development,
     76               it is recommended to set a breakpoint on the following instruction.
     77            */
     78          }
     79          
     80          /**
     81            * @brief Auto Wake Up Interrupt routine.
     82            * @param  None
     83            * @retval None
     84            */
     85          INTERRUPT_HANDLER(AWU_IRQHandler, 1)
     86          {
     87            /* In order to detect unexpected events during development,
     88               it is recommended to set a breakpoint on the following instruction.
     89            */
     90          }
     91          
     92          /**
     93            * @brief Clock Controller Interrupt routine.
     94            * @param  None
     95            * @retval None
     96            */
     97          INTERRUPT_HANDLER(CLK_IRQHandler, 2)
     98          {
     99            /* In order to detect unexpected events during development,
    100               it is recommended to set a breakpoint on the following instruction.
    101            */
    102          }
    103          
    104          /**
    105            * @brief External Interrupt PORTA Interrupt routine.
    106            * @param  None
    107            * @retval None
    108            */
    109          INTERRUPT_HANDLER(EXTI_PORTA_IRQHandler, 3)
    110          {
    111            /* In order to detect unexpected events during development,
    112               it is recommended to set a breakpoint on the following instruction.
    113            */
    114          }
    115          
    116          /**
    117            * @brief External Interrupt PORTB Interrupt routine.
    118            * @param  None
    119            * @retval None
    120            */
    121          INTERRUPT_HANDLER(EXTI_PORTB_IRQHandler, 4)
    122          {
    123            /* In order to detect unexpected events during development,
    124               it is recommended to set a breakpoint on the following instruction.
    125            */
    126          }
    127          
    128          /**
    129            * @brief External Interrupt PORTC Interrupt routine.
    130            * @param  None
    131            * @retval None
    132            */
    133          INTERRUPT_HANDLER(EXTI_PORTC_IRQHandler, 5)
    134          {
    135            /* In order to detect unexpected events during development,
    136               it is recommended to set a breakpoint on the following instruction.
    137            */
    138          }
    139          
    140          /**
    141            * @brief External Interrupt PORTD Interrupt routine.
    142            * @param  None
    143            * @retval None
    144            */
    145          INTERRUPT_HANDLER(EXTI_PORTD_IRQHandler, 6)
    146          {
    147            /* In order to detect unexpected events during development,
    148               it is recommended to set a breakpoint on the following instruction.
    149            */
    150          }
    151          
    152          /**
    153            * @brief External Interrupt PORTE Interrupt routine.
    154            * @param  None
    155            * @retval None
    156            */
    157          INTERRUPT_HANDLER(EXTI_PORTE_IRQHandler, 7)
    158          {
    159            /* In order to detect unexpected events during development,
    160               it is recommended to set a breakpoint on the following instruction.
    161            */
    162          }
    163          
    164          #ifdef STM8S903
    165          /**
    166            * @brief External Interrupt PORTF Interrupt routine.
    167            * @param  None
    168            * @retval None
    169            */
    170           INTERRUPT_HANDLER(EXTI_PORTF_IRQHandler, 8)
    171           {
    172            /* In order to detect unexpected events during development,
    173               it is recommended to set a breakpoint on the following instruction.
    174            */
    175           }
    176          #endif /*STM8S903*/
    177          
    178          #if defined (STM8S208) || defined (STM8AF52Ax)
    179          /**
    180            * @brief CAN RX Interrupt routine.
    181            * @param  None
    182            * @retval None
    183            */
    184           INTERRUPT_HANDLER(CAN_RX_IRQHandler, 8)
    185           {
    186            /* In order to detect unexpected events during development,
    187               it is recommended to set a breakpoint on the following instruction.
    188            */
    189           }
    190          
    191          /**
    192            * @brief CAN TX Interrupt routine.
    193            * @param  None
    194            * @retval None
    195            */
    196           INTERRUPT_HANDLER(CAN_TX_IRQHandler, 9)
    197           {
    198            /* In order to detect unexpected events during development,
    199               it is recommended to set a breakpoint on the following instruction.
    200            */
    201           }
    202          #endif /*STM8S208 || STM8AF52Ax */
    203          
    204          /**
    205            * @brief SPI Interrupt routine.
    206            * @param  None
    207            * @retval None
    208            */
    209          INTERRUPT_HANDLER(SPI_IRQHandler, 10)
    210          {
    211            /* In order to detect unexpected events during development,
    212               it is recommended to set a breakpoint on the following instruction.
    213            */
    214          }
    215          
    216          /**
    217            * @brief Timer1 Update/Overflow/Trigger/Break Interrupt routine.
    218            * @param  None
    219            * @retval None
    220            */
    221          INTERRUPT_HANDLER(TIM1_UPD_OVF_TRG_BRK_IRQHandler, 11)
    222          {
    223            /* In order to detect unexpected events during development,
    224               it is recommended to set a breakpoint on the following instruction.
    225            */
    226          }
    227          
    228          /**
    229            * @brief Timer1 Capture/Compare Interrupt routine.
    230            * @param  None
    231            * @retval None
    232            */
    233          INTERRUPT_HANDLER(TIM1_CAP_COM_IRQHandler, 12)
    234          {
    235            /* In order to detect unexpected events during development,
    236               it is recommended to set a breakpoint on the following instruction.
    237            */
    238          }
    239          
    240          #ifdef STM8S903
    241          /**
    242            * @brief Timer5 Update/Overflow/Break/Trigger Interrupt routine.
    243            * @param  None
    244            * @retval None
    245            */
    246           INTERRUPT_HANDLER(TIM5_UPD_OVF_BRK_TRG_IRQHandler, 13)
    247           {
    248            /* In order to detect unexpected events during development,
    249               it is recommended to set a breakpoint on the following instruction.
    250            */
    251           }
    252           
    253          /**
    254            * @brief Timer5 Capture/Compare Interrupt routine.
    255            * @param  None
    256            * @retval None
    257            */
    258           INTERRUPT_HANDLER(TIM5_CAP_COM_IRQHandler, 14)
    259           {
    260            /* In order to detect unexpected events during development,
    261               it is recommended to set a breakpoint on the following instruction.
    262            */
    263           }
    264          
    265          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    266          /**
    267            * @brief Timer2 Update/Overflow/Break Interrupt routine.
    268            * @param  None
    269            * @retval None
    270            */
    271           INTERRUPT_HANDLER(TIM2_UPD_OVF_BRK_IRQHandler, 13)
    272           {
    273            /* In order to detect unexpected events during development,
    274               it is recommended to set a breakpoint on the following instruction.
    275            */
    276           }
    277          
    278          /**
    279            * @brief Timer2 Capture/Compare Interrupt routine.
    280            * @param  None
    281            * @retval None
    282            */
    283           INTERRUPT_HANDLER(TIM2_CAP_COM_IRQHandler, 14)
    284           {
    285            /* In order to detect unexpected events during development,
    286               it is recommended to set a breakpoint on the following instruction.
    287            */
    288           }
    289          #endif /*STM8S903*/
    290          
    291          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S105) || \
    292              defined(STM8S005) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8AF626x)
    293          /**
    294            * @brief Timer3 Update/Overflow/Break Interrupt routine.
    295            * @param  None
    296            * @retval None
    297            */
    298           INTERRUPT_HANDLER(TIM3_UPD_OVF_BRK_IRQHandler, 15)
    299           {
    300            /* In order to detect unexpected events during development,
    301               it is recommended to set a breakpoint on the following instruction.
    302            */
    303           }
    304          
    305          /**
    306            * @brief Timer3 Capture/Compare Interrupt routine.
    307            * @param  None
    308            * @retval None
    309            */
    310           INTERRUPT_HANDLER(TIM3_CAP_COM_IRQHandler, 16)
    311           {
    312            /* In order to detect unexpected events during development,
    313               it is recommended to set a breakpoint on the following instruction.
    314            */
    315           }
    316          #endif /*STM8S208, STM8S207 or STM8S105 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    317          
    318          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S103) || \
    319              defined(STM8S003) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8S903)
    320          /**
    321            * @brief UART1 TX Interrupt routine.
    322            * @param  None
    323            * @retval None
    324            */
    325           INTERRUPT_HANDLER(UART1_TX_IRQHandler, 17)
    326           {
    327              /* In order to detect unexpected events during development,
    328                 it is recommended to set a breakpoint on the following instruction.
    329              */
    330           }
    331          
    332          /**
    333            * @brief UART1 RX Interrupt routine.
    334            * @param  None
    335            * @retval None
    336            */
    337           INTERRUPT_HANDLER(UART1_RX_IRQHandler, 18)
    338           {
    339              /* In order to detect unexpected events during development,
    340                 it is recommended to set a breakpoint on the following instruction.
    341              */
    342           }
    343          #endif /*STM8S208 or STM8S207 or STM8S103 or STM8S903 or STM8AF62Ax or STM8AF52Ax */
    344          
    345          /**
    346            * @brief I2C Interrupt routine.
    347            * @param  None
    348            * @retval None
    349            */
    350          INTERRUPT_HANDLER(I2C_IRQHandler, 19)
    351          {
    352            /* In order to detect unexpected events during development,
    353               it is recommended to set a breakpoint on the following instruction.
    354            */
    355          }
    356          
    357          #if defined(STM8S105) || defined(STM8S005) ||  defined (STM8AF626x)
    358          /**
    359            * @brief UART2 TX interrupt routine.
    360            * @param  None
    361            * @retval None
    362            */
    363           INTERRUPT_HANDLER(UART2_TX_IRQHandler, 20)
    364           {
    365              /* In order to detect unexpected events during development,
    366                 it is recommended to set a breakpoint on the following instruction.
    367              */
    368           }
    369          
    370          /**
    371            * @brief UART2 RX interrupt routine.
    372            * @param  None
    373            * @retval None
    374            */
    375           INTERRUPT_HANDLER(UART2_RX_IRQHandler, 21)
    376           {
    377              /* In order to detect unexpected events during development,
    378                 it is recommended to set a breakpoint on the following instruction.
    379              */
    380           }
    381          #endif /* STM8S105 or STM8AF626x */
    382          
    383          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    384          /**
    385            * @brief UART3 TX interrupt routine.
    386            * @param  None
    387            * @retval None
    388            */
    389           INTERRUPT_HANDLER(UART3_TX_IRQHandler, 20)
    390           {
    391              /* In order to detect unexpected events during development,
    392                 it is recommended to set a breakpoint on the following instruction.
    393              */
    394           }
    395          
    396          /**
    397            * @brief UART3 RX interrupt routine.
    398            * @param  None
    399            * @retval None
    400            */
    401           INTERRUPT_HANDLER(UART3_RX_IRQHandler, 21)
    402           {
    403              /* In order to detect unexpected events during development,
    404                 it is recommended to set a breakpoint on the following instruction.
    405              */
    406           }
    407          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    408          
    409          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    410          /**
    411            * @brief ADC2 interrupt routine.
    412            * @param  None
    413            * @retval None
    414            */
    415           INTERRUPT_HANDLER(ADC2_IRQHandler, 22)
    416           {
    417              /* In order to detect unexpected events during development,
    418                 it is recommended to set a breakpoint on the following instruction.
    419              */
    420           }
    421          #else /*STM8S105, STM8S103 or STM8S903 or STM8AF626x */
    422          /**
    423            * @brief ADC1 interrupt routine.
    424            * @par Parameters:
    425            * None
    426            * @retval 
    427            * None
    428            */
    429           INTERRUPT_HANDLER(ADC1_IRQHandler, 22)
    430           {
    431              /* In order to detect unexpected events during development,
    432                 it is recommended to set a breakpoint on the following instruction.
    433              */
    434           }
    435          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    436          
    437          #ifdef STM8S903
    438          /**
    439            * @brief Timer6 Update/Overflow/Trigger Interrupt routine.
    440            * @param  None
    441            * @retval None
    442            */
    443          INTERRUPT_HANDLER(TIM6_UPD_OVF_TRG_IRQHandler, 23)
    444           {
    445            /* In order to detect unexpected events during development,
    446               it is recommended to set a breakpoint on the following instruction.
    447            */
    448           }
    449          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF52Ax or STM8AF62Ax or STM8AF626x */
    450          /**
    451            * @brief Timer4 Update/Overflow Interrupt routine.
    452            * @param  None
    453            * @retval None
    454            */
    455           INTERRUPT_HANDLER(TIM4_UPD_OVF_IRQHandler, 23)
    456           {
    457            /* In order to detect unexpected events during development,
    458               it is recommended to set a breakpoint on the following instruction.
    459            */
    460           }
    461          #endif /*STM8S903*/
    462          
    463          /**
    464            * @brief Eeprom EEC Interrupt routine.
    465            * @param  None
    466            * @retval None
    467            */
    468          INTERRUPT_HANDLER(EEPROM_EEC_IRQHandler, 24)
    469          {
    470            /* In order to detect unexpected events during development,
    471               it is recommended to set a breakpoint on the following instruction.
    472            */
    473          }
    474          
    475          /**
    476            * @}
    477            */
    478          
    479          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  ADC1_IRQHandler
       1  AWU_IRQHandler
       1  CLK_IRQHandler
       1  EEPROM_EEC_IRQHandler
       1  EXTI_PORTA_IRQHandler
       1  EXTI_PORTB_IRQHandler
       1  EXTI_PORTC_IRQHandler
       1  EXTI_PORTD_IRQHandler
       1  EXTI_PORTE_IRQHandler
       1  I2C_IRQHandler
       1  SPI_IRQHandler
       1  TIM1_CAP_COM_IRQHandler
       1  TIM1_UPD_OVF_TRG_BRK_IRQHandler
       1  TIM2_CAP_COM_IRQHandler
       1  TIM2_UPD_OVF_BRK_IRQHandler
       1  TIM4_UPD_OVF_IRQHandler
       1  TLI_IRQHandler
       1  TRAP_IRQHandler
       1  UART1_RX_IRQHandler
       1  UART1_TX_IRQHandler

 
 20 bytes in section .near_func.text
 
 20 bytes of CODE memory

Errors: none
Warnings: none
